"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.compose = void 0;
const narrative_schema_common_1 = require("narrative-schema-common");
const narrative_schema_label_1 = require("narrative-schema-label");
exports.compose = (narrativeSchemas) => __awaiter(void 0, void 0, void 0, function* () {
    let labels = [];
    let rules = [];
    let styling = [];
    for (const narrativeSchema of narrativeSchemas) {
        labels = narrative_schema_common_1.composeEntityDefinitions(narrativeSchema, "labels", labels);
        rules = narrative_schema_common_1.composeEntityDefinitions(narrativeSchema, "rules", rules);
        styling = narrative_schema_common_1.composeEntityDefinitions(narrativeSchema, "styling", styling);
    }
    return {
        components: narrativeSchemas,
        labels,
        rules,
        styling,
        labelByName: narrative_schema_label_1.resolveAliasesAndKeyByName(labels),
    };
});
//# sourceMappingURL=compose.js.map