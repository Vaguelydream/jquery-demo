"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractNarrativeSchemas = void 0;
const data_with_position_1 = require("data-with-position");
const lodash_1 = __importDefault(require("lodash"));
exports.extractNarrativeSchemas = (dataWithPosition, document) => {
    const result = {};
    const narrativeSchemasWithPosition = lodash_1.default.get(dataWithPosition, [
        "narrative-schemas",
    ]);
    const rawNarrativeSchemas = data_with_position_1.getValue(narrativeSchemasWithPosition);
    if (!lodash_1.default.isUndefined(rawNarrativeSchemas) && !lodash_1.default.isNull(rawNarrativeSchemas)) {
        result.pathsWithPosition = narrativeSchemasWithPosition;
    }
    lodash_1.default.forEach([
        "schemaNarratives",
        "narrativeSchemas",
        "schemas",
        "schema-narratives",
        "narrative-schema",
    ], (mistypedKey) => {
        if (dataWithPosition[mistypedKey]) {
            document.message(`‘${mistypedKey}’ is not supported and so ignored. Did you mean ‘narrative-schemas’?`, data_with_position_1.getPosition(dataWithPosition[mistypedKey]), "litvis:frontmatter");
        }
    });
    return result;
};
//# sourceMappingURL=extractNarrativeSchemas.js.map