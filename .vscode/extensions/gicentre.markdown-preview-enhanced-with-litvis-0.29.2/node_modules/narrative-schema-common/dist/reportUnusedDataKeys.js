"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.reportUnusedDataKeys = void 0;
const data_with_position_1 = require("data-with-position");
const kind_of_1 = __importDefault(require("kind-of"));
const stringifyDataPath_1 = require("./stringifyDataPath");
exports.reportUnusedDataKeys = (narrativeSchema, dataWithPosition, usedData, path, context) => {
    const kindOfDataWithPosition = data_with_position_1.getKind(dataWithPosition);
    const kindOfUsedData = kind_of_1.default(usedData);
    if (kindOfDataWithPosition === "undefined") {
        return;
    }
    if (kindOfUsedData === "array") {
        for (let i = 0; i < usedData.length; i += 1) {
            exports.reportUnusedDataKeys(narrativeSchema, dataWithPosition[i], usedData[i], [
                ...path,
                i,
            ]);
        }
        return;
    }
    if (kindOfUsedData === "object") {
        for (const key in dataWithPosition) {
            if (dataWithPosition.hasOwnProperty(key)) {
                exports.reportUnusedDataKeys(narrativeSchema, dataWithPosition[key], usedData[key], [...path, key]);
            }
        }
        return;
    }
    if (kindOfUsedData === "undefined") {
        narrativeSchema.info(`Finding ${stringifyDataPath_1.stringifyDataPath(path)} ${context ? `in ${context} ` : ""}was unexpected and the value was ignored. Please check narrative schema docs and ensure there are no typos.`, data_with_position_1.getPosition(dataWithPosition));
    }
};
//# sourceMappingURL=reportUnusedDataKeys.js.map