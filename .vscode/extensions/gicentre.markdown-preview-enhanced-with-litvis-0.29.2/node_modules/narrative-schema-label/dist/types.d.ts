import { BlockAttributes } from "block-attributes";
import { Node } from "unist";
export declare type LabelType = "single" | "paired_opening" | "paired_closing" | "invalid";
export declare type LabelKind = "single" | "paired" | "invalid";
export declare type LabelPlacement = "inline" | "block" | "na";
export declare enum LabelFence {
    START = "{(",
    END = ")}",
    START_CLOSING = "{|",
    END_OPENING = "|}"
}
export declare type LabelErrorType = "blank" | "brokenNesting" | "brokenPair" | "closingWithAttributes" | "htmlTemplateException" | "invalid" | "kindMisuse" | "missingDefinition";
export interface LabelNode extends Node {
    type: "narrativeSchemaLabel";
    data: {
        errorType?: LabelErrorType;
        errorCaption?: string;
        html?: string;
        id?: string;
        info: string;
        labelAttributes: BlockAttributes;
        labelName: string;
        labelType: LabelType;
        pairedId?: string;
        placement?: LabelPlacement;
    };
}
